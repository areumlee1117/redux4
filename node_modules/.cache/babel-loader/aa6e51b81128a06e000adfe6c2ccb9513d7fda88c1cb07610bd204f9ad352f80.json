{"ast":null,"code":"var _jsxFileName = \"/Users/areum/Desktop/basic\\u1100\\u116A\\u110C\\u1166/4th/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// 1. 리덕스에 필요한 코드 import\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst count = createSlice({\n  name: \"숫자\",\n  initialState: 0,\n  reducers: {\n    숫자올리기: state => {\n      return state + 1;\n    }\n  }\n});\nexport const {\n  숫자올리기\n} = count.actions;\n\n// 2. configureStore 사용하기\nconst store = configureStore({\n  reducer: {\n    카운트: count.reducer\n  }\n});\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","configureStore","createSlice","Provider","jsxDEV","_jsxDEV","count","name","initialState","reducers","숫자올리기","state","actions","store","reducer","카운트","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/areum/Desktop/basic과제/4th/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n// 1. 리덕스에 필요한 코드 import\nimport { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport { Provider } from \"react-redux\";\n\nconst count = createSlice({\n  name: \"숫자\",\n  initialState: 0,\n  reducers: {\n    숫자올리기: (state) => {\n      return state + 1;\n    },\n  },\n});\nexport const { 숫자올리기 } = count.actions;\n\n// 2. configureStore 사용하기\nconst store = configureStore({\n  reducer: {\n    카운트: count.reducer,\n  },\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C;AACA,SAASC,cAAc,EAAEC,WAAW,QAAQ,kBAAkB;AAC9D,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,KAAK,GAAGJ,WAAW,CAAC;EACxBK,IAAI,EAAE,IAAI;EACVC,YAAY,EAAE,CAAC;EACfC,QAAQ,EAAE;IACRC,KAAK,EAAGC,KAAK,IAAK;MAChB,OAAOA,KAAK,GAAG,CAAC;IAClB;EACF;AACF,CAAC,CAAC;AACF,OAAO,MAAM;EAAED;AAAM,CAAC,GAAGJ,KAAK,CAACM,OAAO;;AAEtC;AACA,MAAMC,KAAK,GAAGZ,cAAc,CAAC;EAC3Ba,OAAO,EAAE;IACPC,GAAG,EAAET,KAAK,CAACQ;EACb;AACF,CAAC,CAAC;AAEF,MAAME,IAAI,GAAGlB,QAAQ,CAACmB,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTf,OAAA,CAACR,KAAK,CAACwB,UAAU;EAAAC,QAAA,eACfjB,OAAA,CAACF,QAAQ;IAACU,KAAK,EAAEA,KAAM;IAAAS,QAAA,eACrBjB,OAAA,CAACN,GAAG;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACK,CACpB,CAAC;AAED1B,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}