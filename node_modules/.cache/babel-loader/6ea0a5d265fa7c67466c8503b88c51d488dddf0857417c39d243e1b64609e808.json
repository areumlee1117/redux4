{"ast":null,"code":"var _jsxFileName = \"/Users/areum/Desktop/basic/4\\u1112\\u116C\\u110E\\u1161 \\u1100\\u116A\\u110C\\u1166/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/config\";\n\n// const initialState = [\n//   {\n//     id: nanoid(),\n//     name: \"멋진 바지\",\n//     price: 20000,\n//     options: [28, 30, 32],\n//     likes: 100,\n//   },\n//   {\n//     id: nanoid(),\n//     name: \"멋진 셔츠\",\n//     price: 10000,\n//     options: [\"small\", \"medium\", \"large\"],\n//     likes: 200,\n//   },\n//   {\n//     id: nanoid(),\n//     name: \"멋진 신발\",\n//     price: 30000,\n//     options: [230, 240, 250, 260, 270],\n//     likes: 300,\n//   },\n// ];\n\n// const products = createSlice({\n//   name: \"상품들\",\n//   initialState: initialState,\n//   reducers: {\n//     sortByPrice: (state) => {\n//       state.sort((a, b) => a.price - b.price);\n//     },\n//     reset: (state) => initialState,\n//   },\n// });\n// export const { sortByPrice, reset } = products.actions;\n\n// 장바구니 redux\n// 다른 상태가 필요하기 때문에 redux 하나 더\n\n// const cart = createSlice({\n//   name: \"장바구니\",\n//   initialState: [],\n//   reducers: {\n//     추가하기: (state, action) => {\n//       state.push(action.payload); // 빈 배열이었던 state에 데이터가 들어감\n//     },\n//   },\n// });\n\n// export const { 추가하기 } = cart.actions;\n\n// const store = configureStore({\n//   reducer: {\n//     상품들: products.reducer,\n//     카트: cart.reducer,\n//   },\n// });\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 69,\n  columnNumber: 3\n}, this));\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","Provider","store","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/areum/Desktop/basic/4회차 과제/src/index.js"],"sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/config\";\n\n// const initialState = [\n//   {\n//     id: nanoid(),\n//     name: \"멋진 바지\",\n//     price: 20000,\n//     options: [28, 30, 32],\n//     likes: 100,\n//   },\n//   {\n//     id: nanoid(),\n//     name: \"멋진 셔츠\",\n//     price: 10000,\n//     options: [\"small\", \"medium\", \"large\"],\n//     likes: 200,\n//   },\n//   {\n//     id: nanoid(),\n//     name: \"멋진 신발\",\n//     price: 30000,\n//     options: [230, 240, 250, 260, 270],\n//     likes: 300,\n//   },\n// ];\n\n// const products = createSlice({\n//   name: \"상품들\",\n//   initialState: initialState,\n//   reducers: {\n//     sortByPrice: (state) => {\n//       state.sort((a, b) => a.price - b.price);\n//     },\n//     reset: (state) => initialState,\n//   },\n// });\n// export const { sortByPrice, reset } = products.actions;\n\n// 장바구니 redux\n// 다른 상태가 필요하기 때문에 redux 하나 더\n\n// const cart = createSlice({\n//   name: \"장바구니\",\n//   initialState: [],\n//   reducers: {\n//     추가하기: (state, action) => {\n//       state.push(action.payload); // 빈 배열이었던 state에 데이터가 들어감\n//     },\n//   },\n// });\n\n// export const { 추가하기 } = cart.actions;\n\n// const store = configureStore({\n//   reducer: {\n//     상품들: products.reducer,\n//     카트: cart.reducer,\n//   },\n// });\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,aAAa;AACtC,OAAOC,KAAK,MAAM,gBAAgB;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,IAAI,GAAGP,QAAQ,CAACQ,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACH,QAAQ;EAACC,KAAK,EAAEA,KAAM;EAAAQ,QAAA,eACrBN,OAAA,CAACL,GAAG;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACC,CACZ,CAAC;AAEDd,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}